//--------------------------------------------------------------
// rAthena 日誌配置文件
//--------------------------------------------------------------
//   開關選項: 可以用 on/off, yes/no 或 1/0 來表示開關
// 百分比選項: 填寫100即表示100%
//   掩碼選項: 沒有特殊說明的情況下, 默認用來表示遊戲中各單位的類型
//             1: 玩家, 2: 魔物, 4: 寵物, 8: 生命體, 16:傭兵
//             掩碼選項一個數值可以表示裡面有多個內容. 
//             例如: 若您想表示玩家和寵物, 那麼只需將1和4相加, 填寫5即可
//--------------------------------------------------------------

// 請選擇您想啟用哪些日誌記錄? (掩碼選項)
// 0x000000 - 不記錄任何日誌
// 0x000001 - (T) 記錄玩家之間的交易詳情
// 0x000002 - (V) 記錄露天商店的交易詳情
// 0x000004 - (P) 記錄物品被玩家丟棄/撿起的日誌信息
// 0x000008 - (L) 記錄物品被魔物丟棄/撿起的日誌信息
// 0x000010 - (S) 記錄玩家和道具商店NPC之間的交易詳情(從NPC購買物品/賣東西給NPC)
// 0x000020 - (N) 記錄從NPC腳本中刪除/獲得的物品詳情(如 getitem/delitem 指令等)
// 0x000040 - (D) 記錄玩家從魔物身上偷竊到物品的日誌信息
// 0x000080 - (C) 記錄玩家使用物品的日誌信息 (消耗品/寵物&生命體&傭兵的食物/技能消耗道具&短刀等攻擊消耗道具)
// 0x000100 - (O) 記錄玩家創造出來的/當做原材料消耗掉的物品信息
// 0x000200 - (U) 記錄MVP掉落的特殊獎勵物品信息
// 0x000400 - (A) 記錄玩家創造/刪除物品的詳情 (通過 @/# 指令)
// 0x000800 - (R) 記錄玩家從個人倉庫存入/取出的物品信息
// 0x001000 - (G) 記錄玩家從公會倉庫存入/取出的物品信息
// 0x002000 - (E) 記錄玩家利用郵件發送/接收的物品和金錢交易詳情
// 0x004000 - (I) 記錄拍賣系統的交易詳情
// 0x008000 - (B) 記錄採購商店的交易詳情
// 0x010000 - (X) 記錄其他全部交易詳情 (租賃到期/插卡/被 item_check 自動移除/
//                離婚後的戒指刪除/寵物蛋孵化和變回蛋狀態/穿戴或卸下寵物裝備/武器精煉技能/移除陷阱技能等)
// 0x020000 - ($) 記錄現金點券/免費點券的消費以及使用點券購買到的物品詳情
// 0x040000 - (K) 記錄隨身銀行系統的交易詳情(存錢/取錢)
// 0x080000 - (F) 記錄當公會/隊伍解散時, 自動刪除的綁定物品信息
// 0x100000 - (Y) 記錄樂透大轉盤的抽獎詳情(抽中了什麼物品)
// 0x200000 - (Z) 記錄融合道具的詳情(消耗了什麼物品, 融合出了什麼物品)
// 0x400000 - (Q) 記錄完成任務後, 任務系統給予的物品詳情(在quest_db.txt中可以配置任務完成後玩家獲得的道具)
// 
// 例如: 記錄玩家之間的交易詳情+露天商店的交易詳情+從NPC腳本中刪除/獲得的物品詳情+記錄玩家創造/刪除物品的詳情
//       以10進制方式計算: 1+2+32+1024 = 1059
//       以16進制方式計算: 0x1+0x2+0x20+0x400 = 0x423
//       在 enable_logs 選項中, 你可以填寫 1059, 也可以填寫 0x423, 都是合法的.
// 
// 注意: 從背包將道具放入手推車或從手推車取出道具到背包, 都是不會記錄日誌的.
enable_logs: 0xFFFFFF

// 是否將日誌寫入到 MySQL 數據庫中? (開關選項)
// 產生的記錄將會被寫入到 conf/inter_athena.conf 中以 log_db_ 開頭的選項所配置的數據庫中
sql_logs: yes

// 物品日誌過濾器, 可配置某些情況下不記錄日誌
// =============================================================
// 如果符合您設定的條件, 那麼信息就會被記錄
// 0 = 不記錄任何物品
// 1 = 無論是什麼物品, 全都記錄下來
// 
// 高級過濾器, 用來過濾某些特定類型的物品(掩碼選項):
// 0002 - 治癒類物品 (0)
// 0004 - 其他物品(3) + 箭矢類物品 (10)
// 0008 - 可用類物品(2) + 魚餌,延遲消耗類物品(11) + 商城物品(18)
// 0016 - 武器(5)
// 0032 - 盔甲/披肩/鞋子/頭飾/裝飾品等防具(4)
// 0064 - 卡片類物品(6)
// 0128 - 寵物飾品(8) + 寵物蛋(7) (魔物並不會直接掉落寵物蛋, 不過我們使用的是同一套日誌系統, 所以用一樣的方式進行記錄)
// 0256 - 記錄貴重物品 (若物品的買入價格 >= 下面 price_items_log 選項設定的金額, 則認為是貴重物品)
// 0512 - 記錄堆疊數量很多的物品 (若物品的堆疊數量 >= 下面 amount_items_log 選項設定的數量, 則記錄)
// 1024 - 記錄精煉等級超過指定級別的物品 (如果他們的精煉級別 >= 下面 refine_items_log 選項設定的級別, 則認為需要記錄)
// 2048 - 記錄物品掉率低於指定概率的物品 (如果他們的掉率 <= 下面 rare_items_log 選項設定的掉率, 則認為需要記錄)

// 下面舉一些例子: 
// log_filter: 1    = 記錄所有物品的日誌
// log_filter: 2    = 只記錄「治癒類物品」的相關日誌
// log_filter: 4    = 只記錄「其他物品」和「箭矢類物品」的相關日誌
// log_filter: 64   = 只記錄「卡片類物品」的相關日誌
// log_filter: 322  = 只記錄「治癒類物品」、「卡片類物品」和物品的買入價格 >= 下面 price_items_log 選項設定金額的貴重物品
// log_filter: 4080 = 只記錄除了「治癒類物品」, "其他物品", "箭矢和其他可用物品"之外的相關日誌 (包括其他不常見的掉落, 拍賣等)
log_filter: 1

// 記錄精煉等級大於等於此數值的物品
// 此選項必須在 log_filter 中包含 1024 時才有用
refine_items_log: 5

// 記錄物品最小掉率小於等於此數值的物品
// 填寫 1 表示掉率為 0.01%, 填寫 100 表示掉率為 1%, 以此類推
// 此選項必須在 log_filter 中包含 2048 時才有用
rare_items_log: 100

// 記錄物品買入價格大於等於此數值的物品
// 此選項必須在 log_filter 中包含 256 時才有用
price_items_log: 1000

// 記錄物品堆疊數量大於等於此數值的物品
// 此選項必須在 log_filter 中包含 512 時才有用
amount_items_log: 100

// 當玩家使用枯樹枝、血跡樹枝等魔物召喚道具時, 記錄日誌 (開關選項)
// 若啟用的話, 當發現有人使用魔物召喚道具時, 服務端會將: 
// 「是誰在哪張地圖在什麼時間進行了召喚」記錄在日誌數據庫中的 branchlog 表內
// 表名可在本文件的 log_branch_db 選項中定義(除非你知道在做什麼, 否則別亂改表名)
log_branch: no

// 當玩家的金幣(Zeny)數值有變化時, 記錄日誌
// 0 - 表示不記錄
// 1 - 表示記錄任何金幣的使用情況(無論是獲得金幣, 還是花費了金幣)
// 其他數字 - 表示只有玩家的單筆金幣花銷/收入大於等於所指定數字時, 才進行記錄
log_zeny: 0

// 當玩家的商城點數(Cash Points)有變化時, 記錄日誌
// 0 - 表示不記錄
// 1 - 表示記錄任何商城點數的使用情況(無論是獲得商城點數, 還是花費了商城點數)
log_cash: 1

// 當MVP魔物掉落物品時, 記錄日誌 (開關選項)
// 該選項已經過期, 現在記錄魔物的掉落情況, 使用的是頂部的 enable_logs 選項. 
// 
// 不過, 這個選項用來記錄「某個MVP在什麼時候被哪個玩家殺死, 並給予玩家多少
// MVP經驗獎勵」還是很有用的. 
// 
// 日誌信息會被記錄在日誌數據庫中的 mvplog 表內
// 表名可在本文件的 log_mvpdrop_db 選項中定義(除非你知道在做什麼, 否則別亂改表名)
log_mvpdrop: no

// 當玩家對自己使用GM指令或對他人使用GM指令時, 記錄日誌 (開關選項)
// 注意: 所謂對自己使用的GM指令, 即@開頭的指令, 稱之為 Atcommands
//       所謂對他人使用的GM指令, 即#開頭的指令, 稱之為 Charcommands
// 只有使用指令的玩家所對應的組在 'conf/groups.conf' 中
// 定義的 'log_commands' 為 'true', 才會記錄其指令的使用情況
log_commands: yes

// 是否記錄NPC腳本中使用'logmes'指令輸出的信息? (開關選項)
//
// 日誌信息會被記錄在日誌數據庫中的 npclog 表內
// 表名可在本文件的 log_npc_db 選項中定義(除非你知道在做什麼, 否則別亂改表名)
log_npc: yes

// 記錄玩家在遊戲中的聊天內容 (公開頻道, 私聊, 隊伍頻道, 公會頻道, 中央聊天頻道) (掩碼選項)
// 聊天日誌過濾器
// 如果符合您設定的條件, 那麼信息就會被記錄
// =============================================================
// 0 = 不記錄任何聊天內容
// 1 - 記錄公開頻道的聊天內容
// 2 - 記錄玩家與玩家之間私聊的聊天內容
// 4 - 記錄隊伍頻道的聊天內容
// 8 - 記錄公會頻道的聊天內容
// 16 - 記錄中央聊天頻道的聊天內容 (從代碼上看, 此功能未實裝)
// 下面舉一些例子:
// log_chat: 5 = 只記錄「私聊」和「隊伍頻道」的聊天內容
// log_chat: 8 = 只記錄「公會頻道」的聊天內容
// log_chat: 31 = 記錄全部頻道的所有聊天內容
log_chat: 0

// 當GVG攻城戰和SE城戰期間, 是否停止記錄玩家的聊天信息? (開關選項)
log_chat_woe_disable: no

// 記錄餵食日誌
// 當餵養寵物或者人工生命體時, 是否記錄日誌? (掩碼選項)
// 0: 不記錄
// 1: 餵養寵物時記錄
// 2: 餵養人工生命體時記錄
log_feeding: 3

// 往日誌文件中輸出內容時, 在每行信息的前面加上時間戳. 
// 最大長度不能超過20個字符. 
// 常用的格式有:
//   %I:%M:%S %p (小時:分鐘:秒數 12小時制, 會攜帶AM或PM標記)
//   %H:%M:%S (小時:分鐘:秒數, 24小時制)
//   %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 請參考C語言的strftime函數用法. 
// 
// rAthena官方默認值是 [%m/%d/%Y %H:%M:%S] 也就是24小時制的 [月/日/年 時:分:秒]
// 不過這明顯不符合國人習慣, 為此rAthenaCN將其默認值改成了 [%Y/%m/%d %H:%M:%S] 
log_timestamp_format: [%Y/%m/%d %H:%M:%S]

// 日誌數據文件/表名配置
// 以下的配置將會決定日誌被記錄到什麼地方去.
// 如果 'sql_logs' 選項是啟用的話, 那麼默認會把日誌記錄到數據庫, 否則將記錄到文件中.

// 如果 'sql_logs' 選項為 no 的話, 那麼你應該啟用下面這幾行被註釋的信息,
// 並註釋掉下面 log_gm_db: atcommandlog 開頭的那幾行.
// 程序會將日誌寫到這裡指定的路徑中, 比如: log/atcommandlog.log
// log_gm_db: log/atcommandlog.log
// log_branch_db: log/branchlog.log
// log_chat_db: log/chatlog.log
// log_mvpdrop_db: log/mvplog.log
// log_npc_db: log/npclog.log
// log_pick_db: log/picklog.log
// log_zeny_db: log/zenylog.log
// log_cash_db: log/cashlog.log
// log_feeding_db: log/feedinglog.log

// 如果 'sql_logs' 選項為 yes 的話, 那麼你應該啟用下面這幾行信息,
// 並確保上面 log_gm_db: log/atcommandlog.log 開頭的那幾行被註釋掉.
// 程序會將日誌寫到「日誌數據庫」中下面指定的表名中
log_gm_db: atcommandlog
log_branch_db: branchlog
log_chat_db: chatlog
log_mvpdrop_db: mvplog
log_npc_db: npclog
log_pick_db: picklog
log_zeny_db: zenylog
log_cash_db: cashlog
log_feeding_db: feedinglog

import: conf/import/log_conf.txt
